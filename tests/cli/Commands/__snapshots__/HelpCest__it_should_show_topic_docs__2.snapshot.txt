
Help: pup build
===============

Runs the build commands from the .puprc file.


If you want your dev builds to build differently, you can add a build_dev property to your .puprc file.

_Note: If you need to pass environment variables to your build steps, you can add the env var names to the env property in your .puprc file._

> Usage:
--------

..................................................
pup build [--dev]
# or
composer -- pup build [--dev]
..................................................

> Arguments:
------------

 ---------- ---------------------------------------------------------------------------------------------------------------------------------------------------------------------------- --
  Argument   Description
 ---------- ---------------------------------------------------------------------------------------------------------------------------------------------------------------------------- --
  --dev      Optional. Whether or not this is a dev build. Using this option will run the build_dev commands from your .puprc file if they exist, otherwise it will run build commands.
  --root     Optional. Run the command from a different directory from the current.
 ---------- ---------------------------------------------------------------------------------------------------------------------------------------------------------------------------- --


> Specifying build commands:
----------------------------

You can specify build commands within your .puprc file by adding to either the build or build_dev properties. These
commands will be run in the order they are specified. By default, if any command fails, the build will fail. You can,
however, prepend your commands with @ and that will tell pup to ignore failures for that step. Here's an example:

..................................................
{
    "build": [
        "npm ci",
        "npm run build",
        "@composer run some-script"
    ]
}
..................................................

In the above example, npm ci and npm run build will need to complete successfully for the build to succeed, but the
composer run some-script is prepended by @ so if it fails, the build will continue forward.
